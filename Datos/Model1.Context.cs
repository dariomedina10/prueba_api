//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AsistenciaEntities : DbContext
    {
        public AsistenciaEntities()
            : base("name=AsistenciaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cargo> cargos { get; set; }
        public virtual DbSet<control_asistencia> control_asistencia { get; set; }
        public virtual DbSet<departamento> departamentos { get; set; }
        public virtual DbSet<empleado> empleados { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tipo_empleado> tipo_empleado { get; set; }
        public virtual DbSet<turno> turnos { get; set; }
    
        public virtual int buscar_info(string nom, string nombreid, string id)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var nombreidParameter = nombreid != null ?
                new ObjectParameter("nombreid", nombreid) :
                new ObjectParameter("nombreid", typeof(string));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("buscar_info", nomParameter, nombreidParameter, idParameter);
        }
    
        public virtual int delete_tabla(string nom, string nombre_campo_id, string valor_id)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var nombre_campo_idParameter = nombre_campo_id != null ?
                new ObjectParameter("nombre_campo_id", nombre_campo_id) :
                new ObjectParameter("nombre_campo_id", typeof(string));
    
            var valor_idParameter = valor_id != null ?
                new ObjectParameter("valor_id", valor_id) :
                new ObjectParameter("valor_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_tabla", nomParameter, nombre_campo_idParameter, valor_idParameter);
        }
    
        public virtual int insert_cargos(Nullable<int> id_cargo, string descr)
        {
            var id_cargoParameter = id_cargo.HasValue ?
                new ObjectParameter("id_cargo", id_cargo) :
                new ObjectParameter("id_cargo", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_cargos", id_cargoParameter, descrParameter);
        }
    
        public virtual int insert_control_asistencia(Nullable<int> id_control, Nullable<System.DateTime> fecha, Nullable<int> id_turno, Nullable<System.DateTime> hora_entrada, Nullable<System.DateTime> hora_salida, Nullable<int> id_empl)
        {
            var id_controlParameter = id_control.HasValue ?
                new ObjectParameter("id_control", id_control) :
                new ObjectParameter("id_control", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var id_turnoParameter = id_turno.HasValue ?
                new ObjectParameter("id_turno", id_turno) :
                new ObjectParameter("id_turno", typeof(int));
    
            var hora_entradaParameter = hora_entrada.HasValue ?
                new ObjectParameter("hora_entrada", hora_entrada) :
                new ObjectParameter("hora_entrada", typeof(System.DateTime));
    
            var hora_salidaParameter = hora_salida.HasValue ?
                new ObjectParameter("hora_salida", hora_salida) :
                new ObjectParameter("hora_salida", typeof(System.DateTime));
    
            var id_emplParameter = id_empl.HasValue ?
                new ObjectParameter("id_empl", id_empl) :
                new ObjectParameter("id_empl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_control_asistencia", id_controlParameter, fechaParameter, id_turnoParameter, hora_entradaParameter, hora_salidaParameter, id_emplParameter);
        }
    
        public virtual int insert_departamentos(Nullable<int> id_depto, string descr)
        {
            var id_deptoParameter = id_depto.HasValue ?
                new ObjectParameter("id_depto", id_depto) :
                new ObjectParameter("id_depto", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_departamentos", id_deptoParameter, descrParameter);
        }
    
        public virtual int insert_empleados(Nullable<long> id_empl, string nombres, string apelli, Nullable<int> id_cargo, Nullable<int> id_depto, Nullable<System.DateTime> fecha_ingreso, Nullable<int> id_tipo_empl)
        {
            var id_emplParameter = id_empl.HasValue ?
                new ObjectParameter("id_empl", id_empl) :
                new ObjectParameter("id_empl", typeof(long));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("nombres", nombres) :
                new ObjectParameter("nombres", typeof(string));
    
            var apelliParameter = apelli != null ?
                new ObjectParameter("apelli", apelli) :
                new ObjectParameter("apelli", typeof(string));
    
            var id_cargoParameter = id_cargo.HasValue ?
                new ObjectParameter("id_cargo", id_cargo) :
                new ObjectParameter("id_cargo", typeof(int));
    
            var id_deptoParameter = id_depto.HasValue ?
                new ObjectParameter("id_depto", id_depto) :
                new ObjectParameter("id_depto", typeof(int));
    
            var fecha_ingresoParameter = fecha_ingreso.HasValue ?
                new ObjectParameter("fecha_ingreso", fecha_ingreso) :
                new ObjectParameter("fecha_ingreso", typeof(System.DateTime));
    
            var id_tipo_emplParameter = id_tipo_empl.HasValue ?
                new ObjectParameter("id_tipo_empl", id_tipo_empl) :
                new ObjectParameter("id_tipo_empl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_empleados", id_emplParameter, nombresParameter, apelliParameter, id_cargoParameter, id_deptoParameter, fecha_ingresoParameter, id_tipo_emplParameter);
        }
    
        public virtual int insert_tipo_empleado(Nullable<int> id_tipo_empl, string descr)
        {
            var id_tipo_emplParameter = id_tipo_empl.HasValue ?
                new ObjectParameter("id_tipo_empl", id_tipo_empl) :
                new ObjectParameter("id_tipo_empl", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_tipo_empleado", id_tipo_emplParameter, descrParameter);
        }
    
        public virtual int insert_turnos(Nullable<int> id_turno, string descr)
        {
            var id_turnoParameter = id_turno.HasValue ?
                new ObjectParameter("id_turno", id_turno) :
                new ObjectParameter("id_turno", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_turnos", id_turnoParameter, descrParameter);
        }
    
        public virtual int select_tabla(string nom)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("select_tabla", nomParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int update_cargos(Nullable<int> id_cargo, string descr)
        {
            var id_cargoParameter = id_cargo.HasValue ?
                new ObjectParameter("id_cargo", id_cargo) :
                new ObjectParameter("id_cargo", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_cargos", id_cargoParameter, descrParameter);
        }
    
        public virtual int update_control_asistencia(Nullable<int> id_control, Nullable<int> id_turno, Nullable<System.DateTime> hora_entrada, Nullable<System.DateTime> hora_salida)
        {
            var id_controlParameter = id_control.HasValue ?
                new ObjectParameter("id_control", id_control) :
                new ObjectParameter("id_control", typeof(int));
    
            var id_turnoParameter = id_turno.HasValue ?
                new ObjectParameter("id_turno", id_turno) :
                new ObjectParameter("id_turno", typeof(int));
    
            var hora_entradaParameter = hora_entrada.HasValue ?
                new ObjectParameter("hora_entrada", hora_entrada) :
                new ObjectParameter("hora_entrada", typeof(System.DateTime));
    
            var hora_salidaParameter = hora_salida.HasValue ?
                new ObjectParameter("hora_salida", hora_salida) :
                new ObjectParameter("hora_salida", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_control_asistencia", id_controlParameter, id_turnoParameter, hora_entradaParameter, hora_salidaParameter);
        }
    
        public virtual int update_dèpartamentos(Nullable<int> id_depto, string descr)
        {
            var id_deptoParameter = id_depto.HasValue ?
                new ObjectParameter("id_depto", id_depto) :
                new ObjectParameter("id_depto", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_dèpartamentos", id_deptoParameter, descrParameter);
        }
    
        public virtual int update_tipo_empleado(Nullable<int> id_tipo_empl, string descr)
        {
            var id_tipo_emplParameter = id_tipo_empl.HasValue ?
                new ObjectParameter("id_tipo_empl", id_tipo_empl) :
                new ObjectParameter("id_tipo_empl", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_tipo_empleado", id_tipo_emplParameter, descrParameter);
        }
    
        public virtual int update_turnos(Nullable<int> id_turno, string descr)
        {
            var id_turnoParameter = id_turno.HasValue ?
                new ObjectParameter("id_turno", id_turno) :
                new ObjectParameter("id_turno", typeof(int));
    
            var descrParameter = descr != null ?
                new ObjectParameter("descr", descr) :
                new ObjectParameter("descr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_turnos", id_turnoParameter, descrParameter);
        }
    }
}
